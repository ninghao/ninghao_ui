<?php

/**
 * @file
 * Contains ninghao_ui.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use \Drupal\Core\Form\FormStateInterface;

/**
 * Implements template_preprocess_form_element().
 */
function ninghao_ui_preprocess_form_element(&$variables) {
  $variables['label']['#attributes']['type'] = $variables['type'];
  // dpm($variables);
}

/**
 * Implements template_preprocess_views_view_table().
 */
function ninghao_ui_preprocess_views_view_table(&$variables) {
  $variables['attributes']['class'][] = 'ui';
  $variables['attributes']['class'][] = 'table';
  $variables['#attached']['library'][] = 'ninghao_ui/ui.table';
}

/**
 * Implements template_preprocess_field_ui_table().
 */
function ninghao_ui_preprocess_field_ui_table(&$variables) {
  $variables['#attached']['library'][] = 'ninghao_ui/ui.table';
  $variables['attributes']['class'][] = 'ui';
  $variables['attributes']['class'][] = 'table';
}

/**
 * Implements template_preprocess_table().
 */
function ninghao_ui_preprocess_table(&$variables) {
  $variables['#attached']['library'][] = 'ninghao_ui/ui.table';
  if ($variables['attributes']['class'] === 'node-revision-table') {
    $variables['attributes']['class'] = 'ui table node-revision-table';
    return;
  }
  $variables['attributes']['class'][] = 'ui';
  $variables['attributes']['class'][] = 'table';
}

/**
 * Implements hook_preprocess_HOOK() for menu-local-action templates.
 */
function ninghao_ui_preprocess_menu_local_action(array &$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'ui';
  $variables['link']['#options']['attributes']['class'][] = 'basic';
  $variables['link']['#options']['attributes']['class'][] = 'primary';
  // dpm($variables);
}

/**
 * Implements hook_form_alter().
 */
function ninghao_ui_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['actions']['submit']['#button_type'])) {
    if ($form['actions']['submit']['#button_type'] === 'primary') {
      $form['actions']['submit']['#attributes']['class'][] = 'ui primary';
    }
  }
  // filter button on Webprofiler page.
  if (isset($form['actions']['filter'])) {
    $form['actions']['filter']['#attributes']['class'][] = 'ui';
    $form['actions']['filter']['#attributes']['class'][] = 'primary';
  }
  if (isset($form['actions']['delete']['#button_type'])) {
    if ($form['actions']['delete']['#button_type'] === 'danger') {
      $form['actions']['delete']['#attributes']['class'] = 'ui button negative';
    }
  }
  // site_default_country select element in regional settings form.
  if (isset($form['locale']['site_default_country'])) {
    $form['locale']['site_default_country']['#attributes']['class'][] = 'ui';
    $form['locale']['site_default_country']['#attributes']['class'][] = 'search';
    $form['locale']['site_default_country']['#attributes']['class'][] = 'dropdown';
    $form['locale']['site_default_country']['#attached']['library'][] = 'ninghao_ui/ui.dropdown';
  }
  // dpm($form);
}

/**
 * Implements hook_page_attachments_alter().
 */
function ninghao_ui_page_attachments_alter(array &$attachments) {
  $attachments['#attached']['library'][] = 'ninghao_ui/ui.reset';
  $attachments['#attached']['library'][] = 'ninghao_ui/ui.site';
  $attachments['#attached']['library'][] = 'ninghao_ui/ui.button';
  $attachments['#attached']['library'][] = 'ninghao_ui/ui.icon';
  if (_ninghao_ui_is_access_toolbar()) {
    $attachments['#attached']['library'][] = 'ninghao_ui/ui.toolbar';
  }
  // Remove some meta tags.
  $meta_tags = array('system_meta_generator');
  foreach ($attachments['#attached']['html_head'] as $key => $value) {
    if (in_array($value[1], $meta_tags)) {
      unset($attachments['#attached']['html_head'][$key]);
    }
  }

  if (_ninghao_ui_is_access_devel_info()) {
    $attachments['#attached']['library'][] = 'ninghao_ui/ui.devel';
  }
  // dpm($attachments);
}

/**
 * Implementation of hook_element_info_alter().
 */
function ninghao_ui_element_info_alter(array &$info) {
  // dpm($info);
  if (isset($info['entity_autocomplete'])) {
    $info['entity_autocomplete']['#theme'] = 'input__autocomplete';
  }
  if (isset($info['submit'])) {
    $info['submit']['#attributes']['class'][] = 'ui';
  }
  if (isset($info['select'])) {
    $info['select']['#attributes']['class'][] = 'ui';
    $info['select']['#attributes']['class'][] = 'search';
    $info['select']['#attributes']['class'][] = 'dropdown';
    $info['select']['#attached']['library'][] = 'ninghao_ui/ui.dropdown';
  }
  if (isset($info['checkbox'])) {
    $info['checkbox']['#attached']['library'][] = 'ninghao_ui/ui.checkbox';
  }
  if (isset($info['radio'])) {
    $info['radio']['#attached']['library'][] = 'ninghao_ui/ui.checkbox';
  }
  if (isset($info['dropbutton'])) {
    $info['dropbutton']['#attached']['library'][] = 'ninghao_ui/ui.button';
  }
}

/**
 * Check if current user has "access devel information" access.
 */
function _ninghao_ui_is_access_devel_info() {
  $user = \Drupal::currentUser();
  return $user->hasPermission('access devel information');
}

/**
 * Check if current user has "access toolbar" access.
 */
function _ninghao_ui_is_access_toolbar() {
  $user = \Drupal::currentUser();
  return $user->hasPermission('access toolbar');
}

/**
 * Implements hook_preprocess_html().
 */
function ninghao_ui_preprocess_html(&$variables) {
  if (_ninghao_ui_is_access_toolbar()) {
    $variables['attributes']['class'][] = 'ninghao-toolbar';
    $variables['attributes']['class'][] = 'ninghao';
  }
}

/**
 * Implements hook_help().
 */
function ninghao_ui_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ninghao_ui module.
    case 'help.page.ninghao_ui':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Custom UI fro back and front.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function ninghao_ui_theme() {
  return [
    'ninghao_ui' => [
      'template' => 'ninghao_ui',
      'render element' => 'children',
    ],
    'input__search' => [
      'template' => 'form/input--textfield',
      'base hook' => 'input'
    ],
    'input__number' => [
      'template' => 'form/input--textfield',
      'base hook' => 'input'
    ],
    'input__password' => [
      'template' => 'form/input--textfield',
      'base hook' => 'input'
    ],
    'input__email' => [
      'template' => 'form/input--textfield',
      'base hook' => 'input'
    ],
    'input__textfield' => [
      'template' => 'form/input--textfield',
      'base hook' => 'input'
    ],
    'input__autocomplete' => [
      'template' => 'form/input--autocomplete',
      'base hook' => 'input'
    ]
  ];
}
